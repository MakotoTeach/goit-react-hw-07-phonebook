{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/Layout/Layout.module.css","components/ContactList/ContactList.module.css","components/AddContactForm/AddContactForm.module.css","context/ThemeContext.js","hoc/withTheme.js","components/ThemeToogler/ThemeToogler.js","components/Layout/Layout.js","redux/contacs/contactsActions.js","redux/contacs/contactsOperations.js","redux/contacs/contactsSelectors.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/AddContactForm/AddContactForm.js","components/Filter/Filter.js","components/Spinner.js","components/App.js","redux/contacs/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","Context","createContext","themeConfig","light","headerBg","fontColor","bodybg","layoutbg","dark","ThemeContext","toggleTheme","themeKind","state","themeType","setState","theme","themeLs","localStorage","getItem","parsedTheme","JSON","parse","this","prevProps","prevState","setItem","stringify","Provider","value","props","children","Component","Consumer","withTheme","WrappedComponent","className","type","checked","onChange","styles","wrapper","style","background","container","color","addContactRequest","createAction","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","getContactsRequest","getContactsSuccess","getContactsError","changeFilter","axios","defaults","baseURL","headers","common","post","addContact","name","number","dispatch","contactsActions","then","data","catch","error","getContacts","get","removeContact","id","delete","contacts","items","getFilter","filter","getLoading","loading","getVisibleContacts","createSelector","contact","toLowerCase","includes","getContactById","contactId","find","connect","ownProps","contactsSelectors","onRemove","contactsOperations","listItem","nameLine","listItemBtn","onClick","list","map","key","AddContactForm","handleChange","e","target","handleSubmit","preventDefault","onAddContact","submitForm","onSubmit","formLabel","autoComplete","formInput","formButton","mapDispatchToProps","onChangeFilter","title","filterLabel","filterInput","Spinner","width","height","display","justifyContent","alignItems","App","onGetContacts","isLoadingContacts","createReducer","action","payload","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.047dd3f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__3hvlz\",\"nameLine\":\"ContactListItem_nameLine__Rwk0u\",\"listItemBtn\":\"ContactListItem_listItemBtn__UUd1-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__2Tcqj\",\"filterInput\":\"Filter_filterInput__3e3H6 input_input__3hF-y\",\"title\":\"Filter_title__iPKfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Layout_wrapper__1EHq2\",\"container\":\"Layout_container__3HtPe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__hLq5T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitForm\":\"AddContactForm_submitForm__3eOTN\",\"formLabel\":\"AddContactForm_formLabel__2y-9T\",\"formInput\":\"AddContactForm_formInput__3DnRs input_input__3hF-y\",\"formButton\":\"AddContactForm_formButton__30fbH\"};","import React, { Component, createContext } from \"react\";\r\n\r\nconst Context = createContext();\r\n\r\nconst themeConfig = {\r\n  light: {\r\n    headerBg: \"#F7B30C\",\r\n    fontColor: \"black\",\r\n    bodybg: \"#ebe3fc\",\r\n    layoutbg: \"white\"\r\n  },\r\n  dark: {\r\n    headerBg: \"#3c3c3c\",\r\n    fontColor: \"white\",\r\n    bodybg: \"black\",\r\n    layoutbg: \"#1a181c\"\r\n  }\r\n};\r\n\r\nexport default class ThemeContext extends Component {\r\n  static Consumer = Context.Consumer;\r\n\r\n  componentDidMount() {\r\n    const themeLs = localStorage.getItem(\"theme\");\r\n\r\n    if (themeLs) {\r\n      const parsedTheme = JSON.parse(themeLs);\r\n      this.setState({\r\n        themeType: parsedTheme,\r\n        theme: themeConfig[parsedTheme]\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.themeType !== this.state.themeType) {\r\n      localStorage.setItem(\"theme\", JSON.stringify(this.state.themeType));\r\n    }\r\n  }\r\n\r\n  toggleTheme = () => {\r\n    const themeKind = this.state.themeType === \"dark\" ? \"light\" : \"dark\";\r\n    this.setState({\r\n      themeType: themeKind,\r\n      theme: themeConfig[themeKind]\r\n    });\r\n  };\r\n\r\n  state = {\r\n    themeType: \"light\",\r\n    theme: themeConfig.light,\r\n    toggleTheme: this.toggleTheme\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ThemeContext from '../context/ThemeContext'\r\n\r\n\r\nconst withTheme = WrappedComponent => {\r\n  return function withTheme(props) {\r\n    return(\r\n      <ThemeContext.Consumer>\r\n        {value => <WrappedComponent {...props} {...value}/>}\r\n      </ThemeContext.Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withTheme;","import React from 'react';\r\nimport withTheme from '../../hoc/withTheme'\r\n\r\n\r\nconst  ThemeToogler = ({themeType, toggleTheme})  => (\r\n  <div className=\"theme-selector\">\r\n    <span className=\"label\">Toogle theme({themeType})</span>\r\n    <label className=\"switch\">\r\n      <input type=\"checkbox\" checked={themeType === 'light'} onChange={toggleTheme} />\r\n      <span className=\"slider round\"></span>\r\n    </label>\r\n  </div>\r\n)\r\n  \r\n  \r\n  \r\n\r\n\r\nexport default withTheme(ThemeToogler);","import React from \"react\";\r\nimport withTheme from '../../hoc/withTheme'\r\nimport ThemeToogler from \"../ThemeToogler/ThemeToogler\";\r\nimport styles from \"./Layout.module.css\";\r\n\r\nconst Layout = ({children, theme}) => {\r\n  return (\r\n    <div  className={styles.wrapper} style={{background: theme.bodybg }} >\r\n      <div className={styles.container} style={{ color: theme.fontColor, background: theme.layoutbg }}>\r\n        <ThemeToogler />\r\n        <h1>Phonebook</h1>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTheme(Layout);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactRequest = createAction(\"contacts/addRequest\");\r\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\r\nconst addContactError = createAction(\"contacts/addError\");\r\n\r\nconst removeContactRequest = createAction(\"contacts/removeRequest\");\r\nconst removeContactSuccess = createAction(\"contacts/removeSuccess\");\r\nconst removeContactError = createAction(\"contacts/removeError\");\r\n\r\nconst getContactsRequest = createAction(\"contacts/getRequest\");\r\nconst getContactsSuccess = createAction(\"contacts/getSuccess\");\r\nconst getContactsError = createAction(\"contacts/getError\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  changeFilter\r\n};\r\n","import contactsActions from \"../contacs/contactsActions\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com/v1\";\r\naxios.defaults.headers.common['Authorization'] = \"23d3ca50-1209-4518-b35d-a5f4505fa444\";\r\naxios.defaults.headers.post['Content-Type'] = 'application/json';\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  dispatch(contactsActions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", { name, number })\r\n    .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\r\n    .catch(error => dispatch(contactsActions.addContactError(error)));\r\n};\r\n\r\nconst getContacts = () => dispatch => {\r\n  dispatch(contactsActions.getContactsRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(contactsActions.getContactsSuccess(data)))\r\n    .catch(error => dispatch(contactsActions.getContactsError(error)));\r\n};\r\n\r\nconst removeContact = id => dispatch => {\r\n  dispatch(contactsActions.removeContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactsActions.removeContactSuccess(id)))\r\n    .catch(error => dispatch(contactsActions.removeContactError(error)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  getContacts,\r\n  removeContact\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getContacts = state => state.contacts.items;\r\nconst getLoading = state => state.contacts.loading;\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n);\r\n\r\nconst getContactById = createSelector(\r\n  [(state, contactId) => contactId, getContacts],\r\n  (contactId, contacts) => \r\n    contacts.find(contact => contact.id === contactId)\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getFilter,\r\n  getVisibleContacts,\r\n  getContactById\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsOperations from \"../../redux/contacs/contactsOperations\";\r\nimport contactsSelectors from \"../../redux/contacs/contactsSelectors\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\n\r\nfunction ContactListItem({ name, number, onRemove }) {\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <div className={styles.nameLine}>\r\n        <p>{name}:</p>\r\n        <p>{number}</p>\r\n      </div>\r\n      <button className={styles.listItemBtn} type=\"button\" onClick={onRemove}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nconst mapState = (state, ownProps) => {\r\n  const contact = contactsSelectors.getContactById(state, ownProps.id);\r\n\r\n  return {\r\n    ...contact\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemove: () => dispatch(contactsOperations.removeContact(ownProps.id))\r\n});\r\n\r\nexport default connect(mapState, mapDispatchToProps)(ContactListItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport contactsSelectors from '../../redux/contacs/contactsSelectors'\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nfunction ContactList({ contacts }) {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ id}) => (\r\n        <ContactListItem\r\n          key={id}\r\n          id={id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.node.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired\r\n    }).isRequired\r\n  )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n contacts: contactsSelectors.getVisibleContacts(state)\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsOperations from \"../../redux/contacs/contactsOperations\";\r\nimport styles from \"./AddContactForm.module.css\";\r\n\r\n class AddContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };  \r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state.name, this.state.number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={styles.submitForm} onSubmit={this.handleSubmit}>\r\n        <label className={styles.formLabel}>\r\n          Name\r\n          <input\r\n            autoComplete=\"off\"\r\n            className={styles.formInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.formLabel}>\r\n          Number\r\n          <input\r\n            autoComplete=\"off\"\r\n            className={styles.formInput}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.formButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsOperations.addContact\r\n};\r\nexport default connect(null, mapDispatchToProps)(AddContactForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacs/contactsActions\";\r\nimport contactsSelectors from '../../redux/contacs/contactsSelectors'\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <div>\r\n    <h2 className={styles.title}>Contacts</h2>\r\n    <label className={styles.filterLabel}>\r\n      Find contact by name\r\n      <input\r\n        className={styles.filterInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => onChangeFilter(e.target.value)}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.changeFilter\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired\r\n  // onChangeFilter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n      }}\r\n    >\r\n      <Loader type=\"Grid\" color=\"blue\" height={180} width={180} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Spinner;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Layout from \"./Layout/Layout\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport AddContactForm from \"./AddContactForm/AddContactForm\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport ThemeContext from \"../context/ThemeContext\";\r\nimport contactsOperations from \"../redux/contacs/contactsOperations\";\r\nimport contactsSelectors from \"../redux/contacs/contactsSelectors\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ThemeContext>\r\n        <Layout>\r\n          {this.props.isLoadingContacts ? (\r\n            <Spinner />\r\n          ) : (\r\n            <>\r\n              <AddContactForm />\r\n              <Filter />\r\n              <ContactList />\r\n            </>\r\n          )}\r\n        </Layout>\r\n      </ThemeContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoadingContacts: contactsSelectors.getLoading(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onGetContacts: contactsOperations.getContacts\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsActions from \"../contacs/contactsActions\";\r\n\r\nconst AddContact = (state, action) => [...state, action.payload];\r\nconst removeContact = (state, action) =>\r\n  state.filter(contact => contact.id !== action.payload);\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.getContactsSuccess]: (state, action) => action.payload,\r\n  [contactsActions.addContactSuccess]: AddContact,\r\n  [contactsActions.removeContactSuccess]: removeContact\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.changeFilter]: (state, action) => action.payload\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsActions.getContactsRequest]: () => true,\r\n  [contactsActions.getContactsSuccess]: () => false,\r\n  [contactsActions.getContactsError]: () => false,\r\n  [contactsActions.addContactRequest]: () => true,\r\n  [contactsActions.addContactSuccess]: () => false,\r\n  [contactsActions.addContactError]: () => false,\r\n  [contactsActions.removeContactRequest]: () => true,\r\n  [contactsActions.removeContactSuccess]: () => false,\r\n  [contactsActions.removeContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacs/contactsReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  }\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\nimport \"./base.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}